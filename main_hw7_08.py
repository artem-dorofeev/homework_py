def token_parser(s):
    result = []

    if s == '':
        return result

    s = s.strip()
    new_s = ''
    for i in s:
        if i != ' ':
            new_s += i

    num = ''
    for i in new_s:

        if i in ['+', '-', '*', '/', '(', ')']:
            if num != '':
                result.append(num)
            result.append(i)
            num = ''
        else:
            num += i

    if num != '':
        result.append(num)

    return result


example = '(2+ 34) *4 - 5 * 3'
# example = '2+ 34 - 5 * 3 / 556 - (3+'
# example = ''

result = token_parser(example)
print(example)
print(result)
"""

Напишіть функцію, яка приймає параметр рядок, що містить математичний вираз, і перетворює його в список лексем. 
Кожна лексема має бути або оператором, або числом, або дужкою.

Приклад:

"2+ 34-5 * 3" => ['2', '+', '34', '-', '5', '*', '3']

З метою спрощення вважаємо, що числа можуть бути тільки цілими, і вхідний рядок завжди міститиме математичний вираз, що складається з дужок, чисел та операторів.

Зверніть увагу, що лексеми можуть відокремлюватися один від одного різною кількістю прогалин, а можуть і не відокремлюватися зовсім.
 Прогалини не є лексемами та до підсумкового списку потрапити не повинні.

"""
